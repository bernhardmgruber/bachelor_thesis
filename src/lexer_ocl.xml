<?xml version="1.0"?>
<!DOCTYPE CodeBlocks_lexer_properties>
<CodeBlocks_lexer_properties>
        <Lexer name="OpenCL"
                index="3"
                filemasks="*.cl">
                <Style name="Default"
                        index="0"
                        fg="0,0,0"
                        bg="255,255,255"
                        bold="0"
                        italics="0"
                        underlined="0"/>
                <Style name="Comment (normal)"
                        index="1"
                        fg="160,160,160"/>
                <Style name="Comment line (normal)"
                        index="2"
                        fg="190,190,230"/>
                <Style name="Comment (documentation)"
                        index="3"
                        fg="128,128,255"
                        bold="1"/>
                <Style name="Comment line (documentation)"
                        index="15"
                        fg="128,128,255"
                        bold="1"/>
                <Style name="Comment keyword (documentation)"
                        index="17"
                        fg="0,128,128"/>
                <Style name="Comment keyword error (documentation)"
                        index="18"
                        fg="128,0,0"/>
                <Style name="Number"
                        index="4"
                        fg="240,0,240"/>
                <Style name="Keyword"
                        index="5"
                        fg="0,0,160"
                        bold="1"/>
                <Style name="User keyword"
                        index="16"
                        fg="0,160,0"
                        bold="1"/>
                <Style name="String"
                        index="6,12"
                        fg="0,0,255"/>
                <Style name="Character"
                        index="7"
                        fg="224,160,0"/>
                <Style name="UUID"
                        index="8"
                        fg="0,0,0"/>
                <Style name="Preprocessor"
                        index="9"
                        fg="0,160,0"/>
                <Style name="Operator"
                        index="10"
                        fg="255,0,0"/>
                <Style name="Selection"
                        index="-99"
                        bg="192,192,192"/>
                <Style name="Active line"
                        index="-98"
                        bg="255,255,160"/>
                <Style name="Breakpoint line"
                        index="-2"
                        bg="255,160,160"/>
                <Style name="Debugger active line"
                        index="-3"
                        bg="160,160,255"/>
                <Style name="Compiler error line"
                        index="-4"
                        bg="255,128,0"/>
                <Style name="Matching brace highlight"
                        index="34"
                        bg="128,255,255"
                        bold="1"/>
                <Style name="No matching brace highlight"
                        index="35"
                        fg="255,255,255"
                        bg="255,0,0"
                        bold="1"/>
                <Style name="wxSmith-generated code"
                        index="99"
                        fg="64,64,128"
                        bg="255,255,255"
                        italics="1"/>
                <Keywords>
                        <!-- Primary keywords and identifiers -->
                        <Set index="0"
                            value="align_union alignof
                                   asm auto bool break case catch char class const
                                   const_cast constexpr continue decltype default delete do double
                                   dynamic_cast else enum explicit export extern
                                   false final float for friend goto if import inline int long
                                   mutable namespace new nullptr operator override private protected
                                   public register reinterpret_cast return short signed
                                   sizeof static static_cast struct switch template this
                                   throw true try typedef typeid typename union unsigned
                                   using virtual void volatile wchar_t while static_assert
								   
									cl_bitfield
									cl_build_status
									cl_context
									cl_context_info
									cl_context_properties
									cl_command_type
									cl_command_queue
									cl_command_queue_properties
									cl_command_queue_info
									cl_device_address_info
									cl_device_id
									cl_device_info
									cl_device_type
									cl_device_exec_capabilities
									cl_device_fp_config
									cl_device_local_mem_type
									cl_device_mem_cache_type
									cl_event
									cl_event_info
									cl_kernel_info
									cl_kernel_work_group_info
									cl_mem
									cl_mem_flags
									cl_mem_object_type
									cl_mem_info
									cl_platform_id
									cl_platform_info
									cl_image_info
									cl_image_format
									cl_addressing_mode
									cl_filter_mode
									cl_map_flags
									cl_channel_order
									cl_channel_type
									cl_sampler
									cl_sampler_info
									cl_profiling_info
									cl_program
									cl_program_info
									cl_program_build_info
									cl_kernel
									cl_bool
									cl_bitfield
									cl_char
									cl_char2
									cl_char4
									cl_char8   
									cl_char16  
									cl_uchar
									cl_uchar2  
									cl_uchar4  
									cl_uchar8  
									cl_uchar16 
									cl_short
									cl_short2  
									cl_short4  
									cl_short8  
									cl_short16 
									cl_ushort
									cl_ushort2 
									cl_ushort4 
									cl_ushort8 
									cl_ushort16
									cl_int
									cl_int2    
									cl_int4    
									cl_int8    
									cl_int16   
									cl_uint
									cl_uint2   
									cl_uint4   
									cl_uint8   
									cl_uint16  
									cl_long
									cl_long2   
									cl_long4   
									cl_long8   
									cl_long16  
									cl_ulong
									cl_ulong2  
									cl_ulong4  
									cl_ulong8  
									cl_ulong16 
									cl_float
									cl_float2  
									cl_float4  
									cl_float8  
									cl_float16 
									cl_double
									cl_double2 
									cl_double4 
									cl_double8 
									cl_double16
									cl_half
									cl_half2
									cl_half4
									cl_half8
									cl_half16
									char2
									char4
									char8   
									char16  
									uchar
									uchar2  
									uchar4  
									uchar8  
									uchar16 
									short
									short2  
									short4  
									short8  
									short16 
									ushort
									ushort2 
									ushort4 
									ushort8 
									ushort16
									int2    
									int4    
									int8    
									int16   
									uint
									uint2   
									uint4   
									uint8   
									uint16  
									long2   
									long4   
									long8   
									long16  
									ulong
									ulong2  
									ulong4  
									ulong8  
									ulong16 
									float2  
									float4  
									float8  
									float16 
									double2 
									double4 
									double8 
									double16
									half
									half2
									half4
									half8
									half16
									convert_char
									convert_char2
									convert_char4
									convert_char8
									convert_char16
									convert_uchar
									convert_uchar2
									convert_uchar4
									convert_uchar8
									convert_uchar16
									convert_short
									convert_short2
									convert_short4
									convert_short8
									convert_short16
									convert_ushort
									convert_ushort2
									convert_ushort4
									convert_ushort8
									convert_ushort16
									convert_int
									convert_int2
									convert_int4
									convert_int8
									convert_int16
									convert_uint
									convert_uint2
									convert_uint4
									convert_uint8
									convert_uint16
									convert_long
									convert_long2
									convert_long4
									convert_long8
									convert_long16
									convert_ulong
									convert_ulong2
									convert_ulong4
									convert_ulong8
									convert_ulong16
									convert_float
									convert_float2
									convert_float4
									convert_float8
									convert_float16
									image2d_t
									image3d_t
									sampler_t
									event_t
									size_t
									ptrdiff_t
									intptr_t
									uintptr_t
									
									counter32_t
                                   "/>
                        <!-- Secondary keywords and identifiers -->
                        <Set index="1"
                            value="
									__kernel
									kernel
									__attribute__
									__global
									global
									__constant
									constant
									__local
									local
									__private
									private
									__read_only
									read_only
									__write_only
									writ_only
									write_imagef
									write_imagei
									write_imageui
									read_imagef
									read_imagei
									read_imageh
									read_imageui
									get_image_width
									get_image_height
									get_image_depth
									get_image_channel_data_type
									get_image_channel_order
									get_image_dim
									get_work_dim
									get_global_size
									get_global_id
									get_local_size
									get_local_id
									get_num_groups
									get_group_id
									cross
									dot
									distance
									length
									normalize
									fast_distance
									fast_normalize
									isequal
									isnotequal
									isgreater
									isgreat
									erequal
									isless
									islessequal
									islessgreater
									isfinite
									isinf
									isnan
									isnormal
									isordered
									isunordered
									signbit
									any
									bitselect
									select
									async_work_group_copy
									async_work_group_copy
									wait_group_events
									prefetch
									barrier
									mem_fence
									read_mem_fence
									void write_mem_fence
									acos
									acosh
									acospi
									asin
									asinh
									asinpi
									atan
									atan2
									atanh
									atanpi
									atan2pi
									cbrt
									ceil
									copysign
									cos
									cosh
									cospi
									erfc
									erf
									exp
									exp2
									exp10
									expm1
									fabs
									fdim
									floor
									fma
									fmax
									fmin
									fmod
									fract
									floor
									frexp
									hypot
									ilogb
									ldexp
									lgamma
									lgamma_r
									log
									log2
									log10
									log1p
									logb
									mad
									modf
									nan
									nextafter
									pow
									pown
									powr
									remainder
									remquo
									rint
									rootn
									round
									rsqrt
									sin
									sincos
									sinh
									sinpi
									sqrt
									tan
									tanh
									tanpi
									tgamma
									trunc
									half_cos
									half_divide
									half_exp
									half_exp2
									half_exp10
									half_log
									half_log2
									half_log10
									half_powr
									half_recip
									half_rsqrt
									half_sin
									half_sqrt
									half_tan
									native_cos
									native_divide
									native_exp
									native_exp2
									native_exp10
									native_log
									native_log2
									native_log10
									native_powr
									native_recip
									native_rsqrt
									native_sin
									native_sqrt
									native_tan
									mad24
									mul24
									mul_hi
									sub_sat
									rotate
									mad_sat
									clz
									rhadd
									hadd
									add_sat
									abs_diff
									abs
									max
									min
									upsample
									clCreateUserEvent
									clSetUserEventStatus
									clSetEventCallback
									get_global_offset
									minmag
									maxmag
									clamp
									async_work_group_strided_copy
									vec_step
									shuffle
									shuffle2
									clCreateSubBuffer
									cl_buffer_region
								   "/>
                        <!-- Documentation comment keywords -->
                        <Set index="2"
                            value="a addindex addtogroup anchor arg attention
                                   author b brief bug c class code date def defgroup deprecated
                                   dontinclude e em endcode endhtmlonly endif endlatexonly endlink
                                   endverbatim enum example exception f$ f[ f] file fn
                                   hideinitializer htmlinclude htmlonly if image include ingroup
                                   internal invariant interface latexonly li line link mainpage name
                                   namespace nosubgrouping note overload p page par param post pre
                                   ref relates remarks return retval sa section see showinitializer
                                   since skip skipline struct subsection test throw todo typedef
                                   union until var verbatim verbinclude version warning weakgroup
                                   $ @ \ & < > # { }"/>
                </Keywords>
                <!--<SampleCode value="lexer_cpp.sample"
                        breakpoint_line="20"
                        debug_line="22"
                        error_line="23"/>-->
                <LanguageAttributes
                    LineComment="//"
                    StreamCommentStart="/*"
                    StreamCommentEnd="*/"
                    BoxCommentStart="/* "
                    BoxCommentMid=" * "
                    BoxCommentEnd=" */"
                    CaseSensitive="1"
                    LexerCommentStyles="1,2,3,15,17,18"
                    LexerCharacterStyles="7"
                    LexerStringStyles="6,12"
                    LexerPreprocessorStyles="9"/>
        </Lexer>
</CodeBlocks_lexer_properties>
