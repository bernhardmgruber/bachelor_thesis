Content-Type: multipart/related; start=<op.mhtml.1349089330587.f863e0023049c9ca@10.29.17.147>; boundary=----------estGXk9abt7AdIFXNd055l
Content-Location: http://www.bealto.com/gpu-sorting_parallel-bitonic-1.html
Subject: =?utf-8?Q?OpenCL=20Sorting?=
MIME-Version: 1.0

------------estGXk9abt7AdIFXNd055l
Content-Disposition: inline; filename=gpu-sorting_parallel-bitonic-1.html
Content-Type: text/html; name=gpu-sorting_parallel-bitonic-1.html
Content-ID: <op.mhtml.1349089330587.f863e0023049c9ca@10.29.17.147>
Content-Location: http://www.bealto.com/gpu-sorting_parallel-bitonic-1.html
Content-Transfer-Encoding: Quoted-Printable

<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<html>
<head>
<title>OpenCL Sorting</title>
<link rel=3D"stylesheet" href=3D"style.css" type=3D"text/css" media=3D"a=
ll" />
<meta name=3D"google-site-verification" content=3D"852u95aAeGv6fC23NcYPz=
mHCpk7WiGoypUDiPjXvWoo" /></head>
<body><div id=3D"main"><div id=3D"content"><h1>OpenCL Sorting</h1>
<address class=3Dsubtitle>Eric Bainville - June 2011</address>

<H2>Parallel bitonic</H2>

<p>The simplicity and regularity of the bitonic sort make it an ideal ca=
ndidate for experiments.  Let's
transform the inner loop of the ParallelBitonic_Local kernel into a kern=
el operating on global memory.</p>

<pre class=3Dccode>
<span class=3Dckeyword>__kernel</span> <span class=3Dckeyword>void</span=
> ParallelBitonic_A(<span class=3Dckeyword>__global</span> <span class=3D=
ckeyword>const</span> data_t * in,<span class=3Dckeyword>__global</span>=
 data_t * out,<span class=3Dckeyword>int</span> inc,<span class=3Dckeywo=
rd>int</span> dir)
{
  <span class=3Dckeyword>int</span> i =3D <span class=3Dcfunction>get_gl=
obal_id</span>(0); <span class=3Dccomment>// thread index
</span>  <span class=3Dckeyword>int</span> j =3D i ^ inc; <span class=3D=
ccomment>// sibling to compare
</span>
  <span class=3Dccomment>// Load values at I and J
</span>  data_t iData =3D in[i];
  uint iKey =3D getKey(iData);
  data_t jData =3D in[j];
  uint jKey =3D getKey(jData);

  <span class=3Dccomment>// Compare
</span>  bool smaller =3D (jKey &lt; iKey) || ( jKey =3D=3D iKey && j &l=
t; i );
  bool swap =3D smaller ^ (j &lt; i) ^ ((dir & i) !=3D 0);

  <span class=3Dccomment>// Store
</span>  out[i] =3D (swap)?jData:iData;
}
</pre>

<p>The loop on <span class=3D"math">length</span> and <span class=3D"mat=
h">inc</span> is now in the host code: we call <span class=3D"math">O(lo=
g<sup>2</sup>(N))</span> kernels, swapping input/output buffers
and enqueuing a barrier at each invocation.</p>

<center><table>
<tr><th colspan=3D2>ParallelBitonic_A</th></tr>
<tr><td><b><span class=3D"math">log<sub>2</sub>(N)</span></b></td><td><b=
>Key+Value</b></td></tr>
<tr><td> 9</td><td>1.1</td></tr>
<tr><td>10</td><td>1.9</td></tr>
<tr><td>13</td><td>10</td></tr>
<tr><td>14</td><td>17</td></tr>
<tr><td>17</td><td class=3Dgreen>37</td></tr>
<tr><td>18</td><td class=3Dgreen>37</td></tr>
<tr><td>21</td><td>30</td></tr>
<tr><td>22</td><td>28</td></tr>
<tr><td>25</td><td>21</td></tr>
</table></center>
<div class=3Dcaption>Performance of the ParallelBitonic_A kernel, Mkey/s=
.</div>

<p>Each thread makes 3 global memory accesses, and we execute <span clas=
s=3D"math">L*(L+1)/2</span> kernels, where <span class=3D"math">L=3Dlog<=
sub>2</sub>(N)</span>.  For <span class=3D"math">L=3D22</span>,
we reach an impressive 169 GB/s of global memory I/O rate.</p>

<p>In the above kernel, since we run one thread per value, we perform ea=
ch comparison <span class=3D"math">i&lt;&gt;j</span> two times: one in t=
hread <span class=3D"math">i</span>,
and the other one in thread <span class=3D"math">j</span>.  We can make =
this comparison in a single thread, which will manage both values: 2 rea=
d,
2 write, and 1 comparison instead of 4 read, 2 write, and 2 comparisons.=
  This leads to the following kernel, requiring <span class=3D"math">N/2=
</span> threads
at each pass, and modifying data in-place:</p>

<pre class=3Dccode>
#define ORDER(a,b) { bool swap =3D reverse ^ (getKey(a)&lt;getKey(b)); \=

  data_t auxa =3D a; data_t auxb =3D b; a =3D (swap)?auxb:auxa; b =3D (s=
wap)?auxa:auxb; }

<span class=3Dckeyword>__kernel</span> <span class=3Dckeyword>void</span=
> ParallelBitonic_B2(<span class=3Dckeyword>__global</span> data_t * dat=
a,<span class=3Dckeyword>int</span> inc,<span class=3Dckeyword>int</span=
> dir)
{
  <span class=3Dckeyword>int</span> t =3D <span class=3Dcfunction>get_gl=
obal_id</span>(0); <span class=3Dccomment>// thread index
</span>  <span class=3Dckeyword>int</span> low =3D t & (inc - 1); <span =
class=3Dccomment>// low order bits (below INC)
</span>  <span class=3Dckeyword>int</span> i =3D (t&lt;&lt;1) - low; <sp=
an class=3Dccomment>// insert 0 at position INC
</span>  bool reverse =3D ((dir & i) =3D=3D 0); <span class=3Dccomment>/=
/ asc/desc order
</span>  data +=3D i; <span class=3Dccomment>// translate to first value=

</span>
  <span class=3Dccomment>// Load
</span>  data_t x0 =3D data[  0];
  data_t x1 =3D data[inc];

  <span class=3Dccomment>// Sort
</span>  ORDER(x0,x1)

  <span class=3Dccomment>// Store
</span>  data[0  ] =3D x0;
  data[inc] =3D x1;
}
</pre>

<p>This kernel runs at 49 Mkey/s for Key+Value, exceeding 160 GB/s of gl=
obal memory I/O rate,
and 73 Mkey/s for Key sorting only.
The speed limitation comes from the large number of kernels invoked. For=
 example for <span class=3D"math">N=3D2<sup>20</sup></span>, we run <spa=
n class=3D"math">210</span> kernels.</p>

<p>We could collapse two consecutive calls of the kernel with <span clas=
s=3D"math">inc</span> and <span class=3D"math">inc/2</span>. Each thread=
 would process 4 values in-place, performing 4 comparisons. This is illu=
strated in the following kernel:</p>

<pre class=3Dccode>
<span class=3Dckeyword>__kernel</span> <span class=3Dckeyword>void</span=
> ParallelBitonic_B4(<span class=3Dckeyword>__global</span> data_t * dat=
a,<span class=3Dckeyword>int</span> inc,<span class=3Dckeyword>int</span=
> dir)
{
  inc &gt;&gt; 1;
  <span class=3Dckeyword>int</span> t =3D <span class=3Dcfunction>get_gl=
obal_id</span>(0); <span class=3Dccomment>// thread index
</span>  <span class=3Dckeyword>int</span> low =3D t & (inc - 1); <span =
class=3Dccomment>// low order bits (below INC)
</span>  <span class=3Dckeyword>int</span> i =3D ((t - low) &lt;&lt; 2) =
+ low; <span class=3Dccomment>// insert 00 at position INC
</span>  bool reverse =3D ((dir & i) =3D=3D 0); <span class=3Dccomment>/=
/ asc/desc order
</span>  data +=3D i; <span class=3Dccomment>// translate to first value=

</span>
  <span class=3Dccomment>// Load
</span>  data_t x0 =3D data[    0];
  data_t x1 =3D data[  inc];
  data_t x2 =3D data[2*inc];
  data_t x3 =3D data[3*inc];

  <span class=3Dccomment>// Sort
</span>  ORDER(x0,x2)
  ORDER(x1,x3)
  ORDER(x0,x1)
  ORDER(x2,x3)

  <span class=3Dccomment>// Store
</span>  data[    0] =3D x0;
  data[  inc] =3D x1;
  data[2*inc] =3D x2;
  data[3*inc] =3D x3;
}
</pre>

<p>Using the B2 and B4 kernels, parallel bitonic sort reaches 78 Mkey/s =
for Key+Value, and 115 Mkey/s for Key only.
Let's continue in this direction with kernels processing 8 and 16 inputs=
 at a time:</p>

<pre class=3Dccode>
#define ORDERV(x,a,b) { bool swap =3D reverse ^ (getKey(x[a])&lt;getKey(=
x[b])); \
      data_t auxa =3D x[a]; data_t auxb =3D x[b]; \
      x[a] =3D (swap)?auxb:auxa; x[b] =3D (swap)?auxa:auxb; }
#define B2V(x,a) { ORDERV(x,a,a+1) }
#define B4V(x,a) { <span class=3Dckeyword>for</span> (<span class=3Dckey=
word>int</span> i4=3D0;i4&lt;2;i4++) { ORDERV(x,a+i4,a+i4+2) } B2V(x,a) =
B2V(x,a+2) }
#define B8V(x,a) { <span class=3Dckeyword>for</span> (<span class=3Dckey=
word>int</span> i8=3D0;i8&lt;4;i8++) { ORDERV(x,a+i8,a+i8+4) } B4V(x,a) =
B4V(x,a+4) }
#define B16V(x,a) { <span class=3Dckeyword>for</span> (<span class=3Dcke=
yword>int</span> i16=3D0;i16&lt;8;i16++) { ORDERV(x,a+i16,a+i16+8) } B8V=
(x,a) B8V(x,a+8) }

<span class=3Dckeyword>__kernel</span> <span class=3Dckeyword>void</span=
> ParallelBitonic_B8(<span class=3Dckeyword>__global</span> data_t * dat=
a,<span class=3Dckeyword>int</span> inc,<span class=3Dckeyword>int</span=
> dir)
{
  inc &gt;&gt; 2;
  <span class=3Dckeyword>int</span> t =3D <span class=3Dcfunction>get_gl=
obal_id</span>(0); <span class=3Dccomment>// thread index
</span>  <span class=3Dckeyword>int</span> low =3D t & (inc - 1); <span =
class=3Dccomment>// low order bits (below INC)
</span>  <span class=3Dckeyword>int</span> i =3D ((t - low) &lt;&lt; 3) =
+ low; <span class=3Dccomment>// insert 000 at position INC
</span>  bool reverse =3D ((dir & i) =3D=3D 0); <span class=3Dccomment>/=
/ asc/desc order
</span>  data +=3D i; <span class=3Dccomment>// translate to first value=

</span>
  <span class=3Dccomment>// Load
</span>  data_t x[8];
  <span class=3Dckeyword>for</span> (<span class=3Dckeyword>int</span> k=
=3D0;k&lt;8;k++) x[k] =3D data[k*inc];

  <span class=3Dccomment>// Sort
</span>  B8V(x,0)

  <span class=3Dccomment>// Store
</span>  <span class=3Dckeyword>for</span> (<span class=3Dckeyword>int</=
span> k=3D0;k&lt;8;k++) data[k*inc] =3D x[k];
}

<span class=3Dckeyword>__kernel</span> <span class=3Dckeyword>void</span=
> ParallelBitonic_B16(<span class=3Dckeyword>__global</span> data_t * da=
ta,<span class=3Dckeyword>int</span> inc,<span class=3Dckeyword>int</spa=
n> dir)
{
  inc &gt;&gt; 3;
  <span class=3Dckeyword>int</span> t =3D <span class=3Dcfunction>get_gl=
obal_id</span>(0); <span class=3Dccomment>// thread index
</span>  <span class=3Dckeyword>int</span> low =3D t & (inc - 1); <span =
class=3Dccomment>// low order bits (below INC)
</span>  <span class=3Dckeyword>int</span> i =3D ((t - low) &lt;&lt; 4) =
+ low; <span class=3Dccomment>// insert 0000 at position INC
</span>  bool reverse =3D ((dir & i) =3D=3D 0); <span class=3Dccomment>/=
/ asc/desc order
</span>  data +=3D i; <span class=3Dccomment>// translate to first value=

</span>
  <span class=3Dccomment>// Load
</span>  data_t x[16];
  <span class=3Dckeyword>for</span> (<span class=3Dckeyword>int</span> k=
=3D0;k&lt;16;k++) x[k] =3D data[k*inc];

  <span class=3Dccomment>// Sort
</span>  B16V(x,0)

  <span class=3Dccomment>// Store
</span>  <span class=3Dckeyword>for</span> (<span class=3Dckeyword>int</=
span> k=3D0;k&lt;16;k++) data[k*inc] =3D x[k];
}
</pre>

<p>The use of loops does not slow down the generated code.  Using B2, B4=
, and B8 kernels, we can reach 103 Mkey/s for
Key+Value, and 160 Mkey/s for Key only.  Unfortunately, a probable bug i=
n the driver (Catalyst 11.5 and 11.6) does not
allow to execute the B16 kernel without errors in the output. It runs co=
rrectly on a NVIDIA GPU.</p>

<center><table>
<tr><th colspan=3D4>ParallelBitonic</th></tr>
<tr><td><b>Kernels</b></td><td><b>Key+Value</b></td><td><b>Key</b></td><=
/tr>
<tr><td>B2</td><td>49</td><td>73</td></tr>
<tr><td>B2+B4</td><td>78</td><td>115</td></tr>
<tr><td>B2+B4+B8</td><td>103</td><td>160</td></tr>
<tr><td>B2+B4+B8+B16</td><td>FAIL</td><td>FAIL</td></tr>
</table></center>

<p>When <span class=3D"math">inc</span> becomes small enough, all sortin=
g is done locally, and a single workgroup processes the same data.  It i=
s then
possible to terminate the <span class=3D"math">inc</span> loop inside a =
single kernel, inserting barriers to synchronize the threads.
The second step would be to replace global memory I/O by local memory I/=
O for intermediate states. We will
implement this in the next page: <a href=3D"gpu-sorting_parallel-bitonic=
-2.html">Parallel bitonic II</a>.</p>

<center><table class=3D"navbar"><tr><td class=3D"navbar" width=3D"40%" s=
tyle=3D"text-align:left;"><a class=3D"navbar" alt=3D"prec" href=3D"gpu-s=
orting_parallel-bitonic-local.html">OpenCL Sorting&nbsp;: Parallel biton=
ic, local</a></td><td class=3D"navbar" style=3D"text-align:center;"><a c=
lass=3D"navbar" href=3D"gpu-sorting_parallel-bitonic-1.html">Top of Page=
</a></td><td class=3D"navbar" width=3D"40%" style=3D"text-align:right;">=
<a class=3D"navbar" href=3D"gpu-sorting_parallel-bitonic-2.html">OpenCL =
Sorting&nbsp;: Parallel bitonic II</a></td></tr></table></center><br/><p=
>&nbsp;</p></div><div id=3D"menu"><div id=3D"menu_pad"><img src=3D"/imag=
es/bealto-180.png"><br/><br/>BEALTO di Eric Bainville<br/>Mail <a class=3D=
"menu" href=3D"mailto:info@bealto.com">info@bealto.com</a><br/><br/><br/=
><br/><table class=3D"menu"><tr><td class=3D'menu'><a class=3D'menu' hre=
f=3D"home.html">Home</a></td></tr><tr><td class=3D'menu'><a class=3D'men=
u' href=3D"cv.html">Eric Bainville</a></td></tr><tr><td class=3Dmenusep>=
&gt; OpenCL Pages</td></tr><tr><td class=3D'menu'>OpenCL Sorting</td></t=
r><tr><td class=3D'menu'><span class=3D'menu'>&nbsp;&bull;&nbsp;</span><=
a class=3D'menu' href=3D"gpu-sorting_intro.html">Introduction</a></td></=
tr><tr><td class=3D'menu'><span class=3D'menu'>&nbsp;&bull;&nbsp;</span>=
<a class=3D'menu' href=3D"gpu-sorting_parallel-selection.html">Parallel =
selection</a></td></tr><tr><td class=3D'menu'><span class=3D'menu'>&nbsp=
;&bull;&nbsp;</span><a class=3D'menu' href=3D"gpu-sorting_parallel-selec=
tion-local.html">Parallel selection, local</a></td></tr><tr><td class=3D=
'menu'><span class=3D'menu'>&nbsp;&bull;&nbsp;</span><a class=3D'menu' h=
ref=3D"gpu-sorting_parallel-bitonic-local.html">Parallel bitonic, local<=
/a></td></tr><tr><td class=3D'menu'><span class=3D'menu'>&nbsp;&bull;&nb=
sp;</span>Parallel bitonic I</td></tr><tr><td class=3D'menu'><span class=
=3D'menu'>&nbsp;&bull;&nbsp;</span><a class=3D'menu' href=3D"gpu-sorting=
_parallel-bitonic-2.html">Parallel bitonic II</a></td></tr><tr><td class=
=3D'menu'><span class=3D'menu'>&nbsp;&bull;&nbsp;</span><a class=3D'menu=
' href=3D"gpu-sorting_parallel-merge-local.html">Parallel merge, local</=
a></td></tr><tr><td class=3D'menu'><a class=3D'menu' href=3D"gpu-fft2.ht=
ml">OpenCL FFT</a></td></tr><tr><td class=3D'menu'><a class=3D'menu' hre=
f=3D"gpu-fft.html">OpenCL FFT (OLD)</a></td></tr><tr><td class=3D'menu'>=
<a class=3D'menu' href=3D"gpu-gemv.html">OpenCL GEMV</a></td></tr><tr><t=
d class=3D'menu'><a class=3D'menu' href=3D"mp-opencl.html">OpenCL Multip=
recision</a></td></tr><tr><td class=3D'menu'><a class=3D'menu' href=3D"m=
p-mandelbrot.html">GPU Mandelbrot Set</a></td></tr><tr><td class=3D'menu=
'><a class=3D'menu' href=3D"gpu-benchmarks.html">GPU Benchmarks</a></td>=
</tr><tr><td class=3Dmenusep>&gt; Other Pages</td></tr><tr><td class=3D'=
menu'><a class=3D'menu' href=3D"mp-gradient.html">SSE gradient</a></td><=
/tr><tr><td class=3D'menu'><a class=3D'menu' href=3D"mp-dot.html">SSE do=
t product</a></td></tr><tr><td class=3D'menu'><a class=3D'menu' href=3D"=
mp-amd64.html">AMD64 Multiprecision</a></td></tr><tr><td class=3D'menu'>=
<a class=3D'menu' href=3D"mp-intel64.html">Intel64 Multiprecision</a></t=
d></tr><tr><td class=3D'menu'><a class=3D'menu' href=3D"geo-povray-butto=
ns.html">POV-Ray Buttons/Logos</a></td></tr><tr><td class=3D'menu'><a cl=
ass=3D'menu' href=3D"geo-projective.html">Projective Geometry</a></td></=
tr><tr><td class=3D'menu'><a class=3D'menu' href=3D"geo-quaternions.html=
">Quaternions</a></td></tr><tr><td class=3Dmenusep>&nbsp;</td></tr><tr><=
td class=3D'menu'><a class=3D'menu' href=3D"sitemap.html">Sitemap</a></t=
d></tr></table><br/><br/><form action=3D"gpu-sorting_parallel-bitonic-1.=
html" method=3D"post"><input type=3D"password" size=3D"20" maxlength=3D"=
60" name=3D"signkey" style=3D"border-style:solid;border-color:#CCCCCC;bo=
rder-width:1;"/><br/><input size=3D"100" type=3D"submit" value=3D"Sign I=
n" name=3D"sign"/></form></div></div></div>
<script type=3D"text/javascript">
var gaJsHost =3D (("https:" =3D=3D document.location.protocol) ? "https:=
//ssl." : "http://www.");
document.write(unescape("%3Cscript src=3D'" + gaJsHost + "google-analyti=
cs.com/ga.js' type=3D'text/javascript'%3E%3C/script%3E"));
</script>
<script type=3D"text/javascript">
try {
var pageTracker =3D _gat._getTracker("UA-11818098-1");
pageTracker._trackPageview();
} catch(err) {}
</script>
</body></html>


------------estGXk9abt7AdIFXNd055l
Content-Disposition: inline; filename=style.css
Content-Type: text/css; name=style.css
Content-Location: http://www.bealto.com/style.css
Content-Transfer-Encoding: 8bit

/* LAYOUT */
body {
  text-align: center;
  padding: 0px; margin: 32px; border: 0px;
  background-color: white;
  border-collapse: collapse;
  font-family: arial, sans-serif; font-size: 8pt;
}
div { font-family: arial, sans-serif; font-size: 8pt; }
#main {
  margin: 0px; padding: 0px;
  margin-left: auto; margin-right: auto;
  width: 940px;
  text-align: left;
  /* background-image: url(/images/page-center.png); */
}
#top {
  clear: both;
  padding: 8px; margin: 0px; padding-top: 0px; border: none;
}
#bottom {
  clear: both; height: 8px;
  padding: 0px; margin: 0px;border: none;
}
#top0 {
  margin: 0px; padding: 0px;
  margin-left: auto; margin-right: auto;
  width: 816px;
  height: 8px; font-size: 0pt;
  /* background-image: url(/images/page-top.png); */
}
#bottom0 {
  margin: 0px; padding: 0px;
  margin-left: auto; margin-right: auto;
  width: 816px;
  height: 16px; font-size: 0pt;
  /* background-image: url(/images/page-bottom.png); */
}
#content {
  width: 700px;
  float: left;
  padding: 0px; margin: 0px;

  font-family: calibri,tahoma,arial; font-weight: normal; font-size: 11pt; color: black; line-height:130%;
  border: none;
}
#content_pad { padding: 32px; }
#menu {
  width: 200px;
  float: right; height: auto;
  padding: 0px; margin: 0px; border: none;

  font-size: 8pt;
}
#menu_pad { padding:0px; margin:0px; padding-left: 12px; border:none; border-left: #AAA solid 2px; }

/* MENU */
table.menu {
  width: 160px;
  margin: 0px; padding: 0px; border-width: 0px; border-collapse: collapse;
  margin-top: 6px;
  margin-bottom: 6px;
}
td.menu {
  vertical-align: top; font-size: 8pt;
  margin: 0px; padding: 0px; border-width: 0px; padding-bottom: 1px;
  border-color: #CCC;
  border-style: dotted;
  border-top-width: 1px;
  border-bottom-width: 1px;
}
td.menusep {
  vertical-align: top; font-size: 8pt; font-weight: bold;
  margin: 0px; padding: 0px; border-width: 0px; padding-bottom: 1px;
  border-color: #CCC;
  border-style: dotted;
  border-top-width: 1px;
  border-bottom-width: 1px;
  padding-top: 16px;
}
td.restrictedmenu {
  vertical-align: top; font-size: 8pt;
  margin: 0px; padding: 0px; border-width: 0px; padding-bottom: 1px;
  border-color: #CCC;
  border-style: dotted;
  border-top-width: 1px;
  border-bottom-width: 1px;
  background: #FFFF80;
}
a.menu {
  font-style:normal; font-weight: normal; text-decoration:none;
}
a.restrictedmenu {
  font-style:normal; font-weight: normal; text-decoration:none;
}
span.menu { color: #666666; }
span.restrictedmenu { color: #666666; }

img { border: 0px; padding: 0px; }

/* NAVBAR */
table.navbar {
  margin: 0px; padding: 0px; border-collapse: collapse;
  margin-top: 6px;
}
td.navbar {
  width: 560px;
  font-family: tahoma, sans-serif;  font-weight: normal; font-size: 9pt; color: black;
  vertical-align: top;
  border: none; border-top: solid 1px; border-color: #CCCCCC;
  margin: 0px; padding: 0px; padding-top: 6px;
}
a.navbar {
  font-style:normal; font-weight: normal; text-decoration:none;
}

/* STATS */
td.statsheader {
  width: 520px;
  font-family: tahoma, sans-serif;  font-weight: bold; font-size: 9pt; color: black; background: #CCFFCC;
  vertical-align: top;
  border: solid 1px; border-color: black;
  margin: 0px; padding: 2px; padding-left: 6px;
}
td.statsheader_restricted {
  width: 520px;
  font-family: tahoma, sans-serif;  font-weight: bold; font-size: 9pt; color: black; background: #FFFF00;
  vertical-align: top;
  border: solid 1px; border-color: black;
  margin: 0px; padding: 2px; padding-left: 6px;
}
td.statsheader_robot {
  width: 520px;
  font-family: tahoma, sans-serif;  font-weight: bold; font-size: 9pt; color: black; background: #CCCCCC;
  vertical-align: top;
  border: solid 1px; border-color: black;
  margin: 0px; padding: 2px; padding-left: 6px;
}
td.statsheader_knownip {
  width: 520px;
  font-family: tahoma, sans-serif;  font-weight: bold; font-size: 9pt; color: black; background: #00FFFF;
  vertical-align: top;
  border: solid 1px; border-color: black;
  margin: 0px; padding: 2px; padding-left: 6px;
}
td.statsdata {
  width: 520px;
  font-family: tahoma, sans-serif;  font-weight: normal; font-size: 8pt; color: black;
  vertical-align: top;
  border: solid 1px; border-color: black;
  margin: 0px; padding: 2px;
}
div.statsrobot {
  font-family: tahoma, sans-serif;  font-weight: normal; font-size: 8pt; color: black;
}

/* CONTENTS */

div.figure {
  text-align: center;
  margin: 0px; padding: 0px; margin-top: 12px; margin-bottom: 3px;
}

div.caption {
  text-align: center; font-size: 10pt;
  font-style: italic; color: #000080;
  margin: 0px; padding: 0px; margin-bottom: 12px; margin-top: 3px;
}

span.admin {
  background-color: yellow;
}

table {
  padding: 0px; margin: 0px; border-collapse: collapse;
  border: none;
  margin-top: 12px;
  margin-bottom: 12px;
}

td {
  padding:4px; border: solid 1px; border-color: #CCCCCC;
  font-family: arial, sans-serif;  font-weight: normal; font-size: 9pt; color: black;
}
th {
  padding:4px; border: solid 1px; border-color: black;  background-color: #CCC;
  font-family: arial, sans-serif;  font-weight: bold; font-size: 9pt; color: black;
}

td.header {
  background-color: #CCC;
  color: black; font-weight: bold;
  }
td.green { background-color: #CFC; }
td.red { background-color: #FCC; }
td.blue { background-color: #CCF; }
td.code {
  font-family: monospace; font-weight: bold; font-size: 9pt; color: #3333AA; 
  width:20%;
}
td.empty {  border: solid 0px; }

a.sitemap {
  font-style:normal; font-weight: normal; text-decoration:none;
}
input {
  font-family: tahoma, sans-serif; font-weight: normal; font-size: 7pt; color: #666666;
  padding-left:0; padding-right: 0; padding-top: 0; padding-bottom: 0;
  text-align: left; background-color: white;
}
h1 {
  text-align: center;
  font-weight: bold; font-size: 14pt; color: #24A;
  padding-bottom: 8px;
}
h2 {
  font-weight: bold; font-size: 12pt; color: #24A;
  padding-top: 2px; padding-bottom: 2px; padding-left: 0px;
  border-bottom: solid #AAA 2px;
}
h3 {
  font-weight: bold; font-size: 11pt; color: #24A;
  padding-top: 2px; padding-bottom: 2px; padding-left: 0px;
  margin-top: 12px; margin-bottom: 0px;
  letter-spacing: 0.1em;
  text-decoration: none;
}
h4 {
  font-weight: bold; font-size: 11pt; font-style: italic; color: #24A;
  padding-top: 2px; padding-bottom: 2px; padding-left: 0px;
  margin-top: 8px; margin-bottom: 0px;
  text-decoration: none;
}
address.subtitle {
  text-align: center;
  font-family: tahoma, sans-serif; font-weight: normal; font-style:normal; font-size: 10pt; color: #24A;
}
a {
  font-style:normal; font-weight: normal; color: #24A;
}
a:hover { text-decoration:underline; }
em {
  font-style:normal; font-weight: bold;
}
p {
  margin: 0pt; padding: 0pt; margin-top: 6pt; margin-bottom: 6pt; border: none 0pt;
  line-height:130%;
}
p.important {
  font-size: 10pt;
  font-weight: bold; color: black; background-color: #FFCC80;
  padding: 8pt; border: solid 1px black;
}
ul.important {
  font-size: 10pt;
  font-weight: bold; color: black; background-color: #FFCC80;
  padding: 8pt; border: solid 1px black; padding-left: 32px;
}
address {
  margin: 0pt; padding-bottom: 12px;
  font-family: tahoma, sans-serif; font-weight: normal; font-size: 9pt; font-style:italic; color: #808080;
}
span.math {
  font-family: sans-serif; font-weight: bold; font-size: 10pt; color: black;
}
span.mathvector {
  font-family: sans-serif; font-weight: bold; font-size: 9pt; color: #66F;
}
span.mathline {
  font-family: sans-serif; font-weight: bold; font-size: 10pt; color: black; padding-left:32px; line-height:250%;
}
span.code {
  font-family: monospace; font-weight: bold; font-size: 10pt; color: #008; border: 1px solid #CCC; background-color: ivory; padding: 1px;
}

p.cva {
  margin-top: 4pt; margin-bottom: 0pt; color: black;
}
p.cvb {
  margin-bottom: 8px;
  margin-left: 20px;
  margin-right: 20px;
  margin-top: 0px;
  padding: 4px;

  font-size: 10pt;
  color: #444;
}
div.code {
  font-family: monospace; font-weight: normal; font-size: 8pt; color: black; line-height: 120%;
  background-color: ivory;
  margin: 0px; padding: 4px;
  margin-top: 8px; margin-bottom: 8px;
  border: solid; border-width: 1px; border-color: black;
}
pre.code {
  font-family: monospace; font-weight: normal; font-size: 8pt; color: black; line-height: 120%;
  background-color: #FFFFF8;
  margin: 0px; padding: 4px;
  margin-top: 8px; margin-bottom: 8px;
  border: solid; border-width: 1px; border-color: black;
}
/* C code is post-processed by the script (comments, keywords, etc) */
pre.ccode {
  font-family: monospace; font-weight: normal; font-size: 8pt; color: black; line-height: 120%;
  background-color: #FFFFF8;
  margin: 0px; padding: 4px;
  margin-top: 8px; margin-bottom: 8px;
  border: solid; border-width: 1px; border-color: black;
}
/* Corresponding styles */
span.ccomment { color:#394; font-weight: bold; font-style:italic; }
span.ckeyword { color:#00C; font-weight: bold; }
span.cfunction { color:#800; font-weight: bold; }

pre.exec {
  font-family: monospace; font-weight: normal; font-size: 8pt; color: black;
  background-color: #FFDDCC;
  margin: 0pt; padding: 4pt;
  border: solid; border-width: 1px; border-color: black;
}
pre.important {
  font-family: monospace; font-weight: bold; font-size: 9pt; color: black;
  background-color: #FAFAFA;
  margin: 0px; padding: 4px;
  margin-top: 8px; margin-bottom: 8px;
  border: solid; border-width: 1px; border-color: black;
}
span.modif { background: yellow; }
hr {
  color: #666666; background-color: #666666;
  width: 100%;
  height: 1px;
  border: 0;
}

------------estGXk9abt7AdIFXNd055l
Content-Disposition: inline; filename=bealto-180.png
Content-Type: image/png; name=bealto-180.png
Content-Location: http://www.bealto.com/images/bealto-180.png
Content-Transfer-Encoding: Base64

iVBORw0KGgoAAAANSUhEUgAAAJ8AAABOCAIAAACxG1M9AAAACXBIWXMAAAsTAAAL
EwEAmpwYAAAKT2lDQ1BQaG90b3Nob3AgSUNDIHByb2ZpbGUAAHjanVNnVFPpFj33
3vRCS4iAlEtvUhUIIFJCi4AUkSYqIQkQSoghodkVUcERRUUEG8igiAOOjoCMFVEs
DIoK2AfkIaKOg6OIisr74Xuja9a89+bN/rXXPues852zzwfACAyWSDNRNYAMqUIe
EeCDx8TG4eQuQIEKJHAAEAizZCFz/SMBAPh+PDwrIsAHvgABeNMLCADATZvAMByH
/w/qQplcAYCEAcB0kThLCIAUAEB6jkKmAEBGAYCdmCZTAKAEAGDLY2LjAFAtAGAn
f+bTAICd+Jl7AQBblCEVAaCRACATZYhEAGg7AKzPVopFAFgwABRmS8Q5ANgtADBJ
V2ZIALC3AMDOEAuyAAgMADBRiIUpAAR7AGDIIyN4AISZABRG8lc88SuuEOcqAAB4
mbI8uSQ5RYFbCC1xB1dXLh4ozkkXKxQ2YQJhmkAuwnmZGTKBNA/g88wAAKCRFRHg
g/P9eM4Ors7ONo62Dl8t6r8G/yJiYuP+5c+rcEAAAOF0ftH+LC+zGoA7BoBt/qIl
7gRoXgugdfeLZrIPQLUAoOnaV/Nw+H48PEWhkLnZ2eXk5NhKxEJbYcpXff5nwl/A
V/1s+X48/Pf14L7iJIEyXYFHBPjgwsz0TKUcz5IJhGLc5o9H/LcL//wd0yLESWK5
WCoU41EScY5EmozzMqUiiUKSKcUl0v9k4t8s+wM+3zUAsGo+AXuRLahdYwP2SycQ
WHTA4vcAAPK7b8HUKAgDgGiD4c93/+8//UegJQCAZkmScQAAXkQkLlTKsz/HCAAA
RKCBKrBBG/TBGCzABhzBBdzBC/xgNoRCJMTCQhBCCmSAHHJgKayCQiiGzbAdKmAv
1EAdNMBRaIaTcA4uwlW4Dj1wD/phCJ7BKLyBCQRByAgTYSHaiAFiilgjjggXmYX4
IcFIBBKLJCDJiBRRIkuRNUgxUopUIFVIHfI9cgI5h1xGupE7yAAygvyGvEcxlIGy
UT3UDLVDuag3GoRGogvQZHQxmo8WoJvQcrQaPYw2oefQq2gP2o8+Q8cwwOgYBzPE
bDAuxsNCsTgsCZNjy7EirAyrxhqwVqwDu4n1Y8+xdwQSgUXACTYEd0IgYR5BSFhM
WE7YSKggHCQ0EdoJNwkDhFHCJyKTqEu0JroR+cQYYjIxh1hILCPWEo8TLxB7iEPE
NyQSiUMyJ7mQAkmxpFTSEtJG0m5SI+ksqZs0SBojk8naZGuyBzmULCAryIXkneTD
5DPkG+Qh8lsKnWJAcaT4U+IoUspqShnlEOU05QZlmDJBVaOaUt2ooVQRNY9aQq2h
tlKvUYeoEzR1mjnNgxZJS6WtopXTGmgXaPdpr+h0uhHdlR5Ol9BX0svpR+iX6AP0
dwwNhhWDx4hnKBmbGAcYZxl3GK+YTKYZ04sZx1QwNzHrmOeZD5lvVVgqtip8FZHK
CpVKlSaVGyovVKmqpqreqgtV81XLVI+pXlN9rkZVM1PjqQnUlqtVqp1Q61MbU2ep
O6iHqmeob1Q/pH5Z/YkGWcNMw09DpFGgsV/jvMYgC2MZs3gsIWsNq4Z1gTXEJrHN
2Xx2KruY/R27iz2qqaE5QzNKM1ezUvOUZj8H45hx+Jx0TgnnKKeX836K3hTvKeIp
G6Y0TLkxZVxrqpaXllirSKtRq0frvTau7aedpr1Fu1n7gQ5Bx0onXCdHZ4/OBZ3n
U9lT3acKpxZNPTr1ri6qa6UbobtEd79up+6Ynr5egJ5Mb6feeb3n+hx9L/1U/W36
p/VHDFgGswwkBtsMzhg8xTVxbzwdL8fb8VFDXcNAQ6VhlWGX4YSRudE8o9VGjUYP
jGnGXOMk423GbcajJgYmISZLTepN7ppSTbmmKaY7TDtMx83MzaLN1pk1mz0x1zLn
m+eb15vft2BaeFostqi2uGVJsuRaplnutrxuhVo5WaVYVVpds0atna0l1rutu6cR
p7lOk06rntZnw7Dxtsm2qbcZsOXYBtuutm22fWFnYhdnt8Wuw+6TvZN9un2N/T0H
DYfZDqsdWh1+c7RyFDpWOt6azpzuP33F9JbpL2dYzxDP2DPjthPLKcRpnVOb00dn
F2e5c4PziIuJS4LLLpc+Lpsbxt3IveRKdPVxXeF60vWdm7Obwu2o26/uNu5p7ofc
n8w0nymeWTNz0MPIQ+BR5dE/C5+VMGvfrH5PQ0+BZ7XnIy9jL5FXrdewt6V3qvdh
7xc+9j5yn+M+4zw33jLeWV/MN8C3yLfLT8Nvnl+F30N/I/9k/3r/0QCngCUBZwOJ
gUGBWwL7+Hp8Ib+OPzrbZfay2e1BjKC5QRVBj4KtguXBrSFoyOyQrSH355jOkc5p
DoVQfujW0Adh5mGLw34MJ4WHhVeGP45wiFga0TGXNXfR3ENz30T6RJZE3ptnMU85
ry1KNSo+qi5qPNo3ujS6P8YuZlnM1VidWElsSxw5LiquNm5svt/87fOH4p3iC+N7
F5gvyF1weaHOwvSFpxapLhIsOpZATIhOOJTwQRAqqBaMJfITdyWOCnnCHcJnIi/R
NtGI2ENcKh5O8kgqTXqS7JG8NXkkxTOlLOW5hCepkLxMDUzdmzqeFpp2IG0yPTq9
MYOSkZBxQqohTZO2Z+pn5mZ2y6xlhbL+xW6Lty8elQfJa7OQrAVZLQq2QqboVFoo
1yoHsmdlV2a/zYnKOZarnivN7cyzytuQN5zvn//tEsIS4ZK2pYZLVy0dWOa9rGo5
sjxxedsK4xUFK4ZWBqw8uIq2Km3VT6vtV5eufr0mek1rgV7ByoLBtQFr6wtVCuWF
fevc1+1dT1gvWd+1YfqGnRs+FYmKrhTbF5cVf9go3HjlG4dvyr+Z3JS0qavEuWTP
ZtJm6ebeLZ5bDpaql+aXDm4N2dq0Dd9WtO319kXbL5fNKNu7g7ZDuaO/PLi8ZafJ
zs07P1SkVPRU+lQ27tLdtWHX+G7R7ht7vPY07NXbW7z3/T7JvttVAVVN1WbVZftJ
+7P3P66Jqun4lvttXa1ObXHtxwPSA/0HIw6217nU1R3SPVRSj9Yr60cOxx++/p3v
dy0NNg1VjZzG4iNwRHnk6fcJ3/ceDTradox7rOEH0x92HWcdL2pCmvKaRptTmvtb
Ylu6T8w+0dbq3nr8R9sfD5w0PFl5SvNUyWna6YLTk2fyz4ydlZ19fi753GDborZ7
52PO32oPb++6EHTh0kX/i+c7vDvOXPK4dPKy2+UTV7hXmq86X23qdOo8/pPTT8e7
nLuarrlca7nuer21e2b36RueN87d9L158Rb/1tWeOT3dvfN6b/fF9/XfFt1+cif9
zsu72Xcn7q28T7xf9EDtQdlD3YfVP1v+3Njv3H9qwHeg89HcR/cGhYPP/pH1jw9D
BY+Zj8uGDYbrnjg+OTniP3L96fynQ89kzyaeF/6i/suuFxYvfvjV69fO0ZjRoZfy
l5O/bXyl/erA6xmv28bCxh6+yXgzMV70VvvtwXfcdx3vo98PT+R8IH8o/2j5sfVT
0Kf7kxmTk/8EA5jz/GMzLdsAAAAgY0hSTQAAeiUAAICDAAD5/wAAgOkAAHUwAADq
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

------------estGXk9abt7AdIFXNd055l--
